// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resturant.API.Data;

#nullable disable

namespace Resturant.API.Migrations
{
    [DbContext(typeof(ResturantDbContext))]
    [Migration("20231201190624_Update-Database")]
    partial class UpdateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Resturant.API.Data.ItemDescription", b =>
                {
                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<string>("AllergenInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutritionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemID");

                    b.ToTable("ItemDescriptions");

                    b.HasData(
                        new
                        {
                            ItemID = 1,
                            AllergenInfo = "No known allergens",
                            DescriptionText = "Cool and refreshing drink",
                            Language = "English",
                            NutritionalInfo = "Calories: 100, Sugar: 20g"
                        },
                        new
                        {
                            ItemID = 2,
                            AllergenInfo = "No known allergens",
                            DescriptionText = "A refreshing drink to enjoy your meal",
                            Language = "English",
                            NutritionalInfo = "Calories: 100, Sugar: 20g"
                        },
                        new
                        {
                            ItemID = 3,
                            AllergenInfo = "Contains: Potatoes",
                            DescriptionText = "Crispy and delicious french fries",
                            Language = "English",
                            NutritionalInfo = "Calories: 300, Fat: 15g"
                        });
                });

            modelBuilder.Entity("Resturant.API.Data.MenuCategory", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.ToTable("MenuCategories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryDescription = "A variety of refreshing beverages.",
                            CategoryName = "Drinks",
                            DisplayOrder = 1
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryDescription = "Delicious starters to begin your meal.",
                            CategoryName = "Starters",
                            DisplayOrder = 2
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryDescription = "Savor the flavor with our mixed grill meals.",
                            CategoryName = "Mix Grill Meals",
                            DisplayOrder = 3
                        });
                });

            modelBuilder.Entity("Resturant.API.Data.MenuItem", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsDishOfTheDay")
                        .HasColumnType("bit");

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("OfferID");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            ItemID = 1,
                            CategoryID = 1,
                            DisplayOrder = 1,
                            IsDishOfTheDay = false,
                            ItemImage = "path/to/coke_image.jpg",
                            ItemName = "Coke",
                            Price = 1.5m
                        },
                        new
                        {
                            ItemID = 2,
                            CategoryID = 1,
                            DisplayOrder = 2,
                            IsDishOfTheDay = false,
                            ItemImage = "path/to/pepsi_image.jpg",
                            ItemName = "Pepsi",
                            Price = 1.5m
                        },
                        new
                        {
                            ItemID = 3,
                            CategoryID = 2,
                            DisplayOrder = 1,
                            IsDishOfTheDay = true,
                            ItemImage = "path/to/french_fries_image.jpg",
                            ItemName = "French Fries",
                            Price = 2.5m
                        });
                });

            modelBuilder.Entity("Resturant.API.Data.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewID"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.HasIndex("ItemID");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewID = 1,
                            Comment = "Very refreshing!",
                            ItemID = 1,
                            Rating = 5
                        },
                        new
                        {
                            ReviewID = 2,
                            Comment = "Loved it!",
                            ItemID = 2,
                            Rating = 4
                        },
                        new
                        {
                            ReviewID = 3,
                            Comment = "Tasty fries!",
                            ItemID = 3,
                            Rating = 5
                        });
                });

            modelBuilder.Entity("Resturant.API.Data.SpecialOffer", b =>
                {
                    b.Property<int>("OfferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfferID"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OfferDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfferName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OfferID");

                    b.ToTable("SpecialOffers");

                    b.HasData(
                        new
                        {
                            OfferID = 1,
                            EndDate = new DateTime(2023, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            OfferDetails = "Get refreshing beverages at half price!",
                            OfferName = "Summer Offer",
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OfferID = 2,
                            EndDate = new DateTime(2024, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            OfferDetails = "Enjoy warm meals with a 30% discount!",
                            OfferName = "Winter Offer",
                            StartDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            OfferID = 3,
                            EndDate = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            OfferDetails = "Fresh spring meals at a special price!",
                            OfferName = "Spring Offer",
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Resturant.API.Data.ItemDescription", b =>
                {
                    b.HasOne("Resturant.API.Data.MenuItem", "MenuItem")
                        .WithOne("ItemDescription")
                        .HasForeignKey("Resturant.API.Data.ItemDescription", "ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Resturant.API.Data.MenuItem", b =>
                {
                    b.HasOne("Resturant.API.Data.MenuCategory", "MenuCategory")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryID");

                    b.HasOne("Resturant.API.Data.SpecialOffer", "SpecialOffer")
                        .WithMany("MenuItems")
                        .HasForeignKey("OfferID");

                    b.Navigation("MenuCategory");

                    b.Navigation("SpecialOffer");
                });

            modelBuilder.Entity("Resturant.API.Data.Review", b =>
                {
                    b.HasOne("Resturant.API.Data.MenuItem", "MenuItem")
                        .WithMany("Reviews")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("Resturant.API.Data.MenuCategory", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("Resturant.API.Data.MenuItem", b =>
                {
                    b.Navigation("ItemDescription");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Resturant.API.Data.SpecialOffer", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
